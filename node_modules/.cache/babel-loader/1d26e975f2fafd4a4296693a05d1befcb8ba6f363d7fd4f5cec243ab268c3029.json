{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Board from './components/Board';\nimport TilePicker from './components/TilePicker';\nimport ScoreBoard from './components/ScoreBoard';\nimport './styles.css';\n\n// const AppContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   padding: 20px;\n//   background-color: #f0f0f0;\n//   min-height: 70vh;\n//   justify-content: center; \n// `;\n\n// const GameTitle = styled.h1`\n//   color: #333;\n//   margin-bottom: 20px;\n// `;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tiles = [];\nconst iValues = [1, 5, 9];\nconst jValues = [2, 6, 7];\nconst kValues = [3, 4, 8];\nfor (const i of iValues) {\n  for (const j of jValues) {\n    for (const k of kValues) {\n      tiles.push([i, j, k]);\n    }\n  }\n}\nfunction App() {\n  _s();\n  const [placedTiles, setPlacedTiles] = useState(Array.from({\n    length: 19\n  }));\n  const [restTiles, setRestTiles] = useState(tiles);\n  const [currentTile, setCurrentTile] = useState(() => {\n    const randomIndex = Math.floor(Math.random() * restTiles.length);\n    const tile = restTiles[randomIndex];\n    const tilesArr = Array.from(restTiles);\n    tilesArr.splice(randomIndex, 1);\n    setRestTiles(tilesArr);\n    return tile;\n  });\n  const pickRandomTile = () => {\n    const randomIndex = Math.floor(Math.random() * restTiles.length);\n    const tile = restTiles[randomIndex];\n    const tilesArr = Array.from(restTiles);\n    tilesArr.splice(randomIndex, 1);\n    setRestTiles(tilesArr);\n    return tile;\n  };\n  const choosePlace = index => {\n    const tilesArr = Array.from(placedTiles);\n    tilesArr[index] = currentTile;\n    setPlacedTiles(tilesArr);\n    setCurrentTile(pickRandomTile());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AppContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"GameTitle\",\n      children: \"Take It Easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      onChoose: choosePlace,\n      currentTile: currentTile,\n      placedTiles: placedTiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TilePicker, {\n      currentTile: currentTile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EbBAQn9X+ItlHs8Fl4fjTHCFz8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styled","Board","TilePicker","ScoreBoard","jsxDEV","_jsxDEV","tiles","iValues","jValues","kValues","i","j","k","push","App","_s","placedTiles","setPlacedTiles","Array","from","length","restTiles","setRestTiles","currentTile","setCurrentTile","randomIndex","Math","floor","random","tile","tilesArr","splice","pickRandomTile","choosePlace","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChoose","_c","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Board from './components/Board';\nimport TilePicker from './components/TilePicker';\nimport ScoreBoard from './components/ScoreBoard';\nimport './styles.css';\n\n\n// const AppContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   padding: 20px;\n//   background-color: #f0f0f0;\n//   min-height: 70vh;\n//   justify-content: center; \n// `;\n\n// const GameTitle = styled.h1`\n//   color: #333;\n//   margin-bottom: 20px;\n// `;\n\nlet tiles = [];\nconst iValues = [1, 5, 9];\nconst jValues = [2, 6, 7];\nconst kValues = [3, 4, 8];\n\nfor (const i of iValues) {\n  for (const j of jValues) {\n    for (const k of kValues) {\n      tiles.push([i, j, k]);\n    }\n  }\n}\n\nfunction App() {\n  const [placedTiles, setPlacedTiles] = useState(Array.from({ length: 19 }));\n  const [restTiles, setRestTiles] = useState(tiles)\n  const [currentTile, setCurrentTile] = useState(() => {\n    const randomIndex = Math.floor(Math.random() * restTiles.length);\n    const tile = restTiles[randomIndex];\n    const tilesArr = Array.from(restTiles);\n    tilesArr.splice(randomIndex, 1)\n    setRestTiles(tilesArr)\n    return tile;\n  });\n\n  const pickRandomTile = () => {\n    const randomIndex = Math.floor(Math.random() * restTiles.length);\n    const tile = restTiles[randomIndex];\n    const tilesArr = Array.from(restTiles);\n    tilesArr.splice(randomIndex, 1)\n    setRestTiles(tilesArr)\n    return tile;\n  };\n\n  const choosePlace = (index) => {\n    const tilesArr = Array.from(placedTiles);\n    tilesArr[index] = currentTile;\n    setPlacedTiles(tilesArr);\n    setCurrentTile(pickRandomTile());\n  }\n\n  return (\n    <div className=\"AppContainer\">\n      <h1 className=\"GameTitle\">Take It Easy</h1>\n      <Board onChoose={choosePlace} currentTile={currentTile} placedTiles={placedTiles}/>\n      <TilePicker currentTile={currentTile}/>\n      <ScoreBoard />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}