{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js\";\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 80px);\n  grid-template-rows: repeat(9, 40px);\n  width: 420px;\n  height: 400px;\n  margin-bottom: 50px;\n  align: center;\n`;\n_c = BoardContainer;\nconst HexCell = styled.div`\n  width: 130%;\n  height: 190%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = HexCell;\nconst boardLayout = [[0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0]];\nfunction Board({\n  onChoose,\n  placedTiles\n}) {\n  const placeTile = index => {\n    onChoose(index);\n    console.log('hi');\n  };\n  let tileIndex = 0;\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: boardLayout.flat().map((cell, index) => {\n      if (!cell) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this);\n      }\n      tileIndex++;\n      return /*#__PURE__*/_jsxDEV(HexCell, {\n        children: /*#__PURE__*/_jsxDEV(Tile, {\n          values: placedTiles[index],\n          onClick: e => placeTile(tileIndex) // Example values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Board;\nexport default Board;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"HexCell\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","useState","styled","Tile","jsxDEV","_jsxDEV","BoardContainer","div","_c","HexCell","_c2","boardLayout","Board","onChoose","placedTiles","placeTile","index","console","log","tileIndex","children","flat","map","cell","fileName","_jsxFileName","lineNumber","columnNumber","values","onClick","e","_c3","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\n\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 80px);\n  grid-template-rows: repeat(9, 40px);\n  width: 420px;\n  height: 400px;\n  margin-bottom: 50px;\n  align: center;\n`;\n\nconst HexCell = styled.div`\n  width: 130%;\n  height: 190%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst boardLayout = [\n  [0, 0, 1, 0, 0],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [0, 0, 1, 0, 0]\n];\n\nfunction Board({onChoose, placedTiles}) {\n\n  const placeTile = (index) => {\n    onChoose(index);\n    console.log('hi');\n  }\n\n  let tileIndex = 0;\n  return (\n    <BoardContainer>\n      {boardLayout.flat().map((cell, index) => {\n        if (!cell){\n          return (<div key={index}>\n          </div>);\n        }\n        tileIndex++;\n        return (\n        <HexCell key={index} >\n            <Tile \n              values={placedTiles[index]} \n              onClick={(e) => placeTile(tileIndex)} // Example values\n            />\n        </HexCell>\n      );})}\n    </BoardContainer>\n  );\n}\n\nexport default Board;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,cAAc;AAUpB,MAAMG,OAAO,GAAGP,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,OAAO;AAQb,MAAME,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAChB;AAED,SAASC,KAAKA,CAAC;EAACC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAEtC,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3BH,QAAQ,CAACG,KAAK,CAAC;IACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,IAAIC,SAAS,GAAG,CAAC;EACjB,oBACEd,OAAA,CAACC,cAAc;IAAAc,QAAA,EACZT,WAAW,CAACU,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEP,KAAK,KAAK;MACvC,IAAI,CAACO,IAAI,EAAC;QACR,oBAAQlB,OAAA,YAAUW,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MACR;MACAR,SAAS,EAAE;MACX,oBACAd,OAAA,CAACI,OAAO;QAAAW,QAAA,eACJf,OAAA,CAACF,IAAI;UACHyB,MAAM,EAAEd,WAAW,CAACE,KAAK,CAAE;UAC3Ba,OAAO,EAAGC,CAAC,IAAKf,SAAS,CAACI,SAAS,CAAE,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC,GAJQX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAAC;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAErB;AAACI,GAAA,GA1BQnB,KAAK;AA4Bd,eAAeA,KAAK;AAAC,IAAAJ,EAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}