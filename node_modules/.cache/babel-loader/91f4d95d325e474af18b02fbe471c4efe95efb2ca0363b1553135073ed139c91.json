{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 600px;\n  height: 600px;\n  position: relative;\n`;\n_c = BoardContainer;\nconst HexRow = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c2 = HexRow;\nconst HexCell = styled.div`\n  width: 100px;\n  height: 115px;\n  margin: 0 2px;\n  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\n  background-color: ${props => props.empty ? 'transparent' : '#8a2be2'};\n`;\n_c3 = HexCell;\nconst boardLayout = [[0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\nfunction Board({\n  currentTile,\n  onPlaceTile\n}) {\n  _s();\n  const [tiles, setTiles] = useState(Array(19).fill(null));\n  const placeTile = index => {\n    if (tiles[index] === null && currentTile) {\n      const newTiles = [...tiles];\n      newTiles[index] = currentTile;\n      setTiles(newTiles);\n      onPlaceTile();\n    }\n  };\n  let tileIndex = 0;\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: boardLayout.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(HexRow, {\n      style: {\n        marginTop: rowIndex ? '-28px' : 0\n      },\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(HexCell, {\n        empty: !cell,\n        children: [cell ? /*#__PURE__*/_jsxDEV(Tile, {\n          values: tiles[tileIndex] || [0, 0, 0],\n          onClick: () => placeTile(tileIndex),\n          index: tileIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100px',\n            height: '115px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), cell && tileIndex++]\n      }, `${rowIndex}-${colIndex}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"G3nbSkoqANilhO7LEo80zaLWJNE=\");\n_c4 = Board;\nexport default Board;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"HexRow\");\n$RefreshReg$(_c3, \"HexCell\");\n$RefreshReg$(_c4, \"Board\");","map":{"version":3,"names":["React","useState","styled","Tile","jsxDEV","_jsxDEV","BoardContainer","div","_c","HexRow","_c2","HexCell","props","empty","_c3","boardLayout","Board","currentTile","onPlaceTile","_s","tiles","setTiles","Array","fill","placeTile","index","newTiles","tileIndex","children","map","row","rowIndex","style","marginTop","cell","colIndex","values","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","_c4","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\n\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 600px;\n  height: 600px;\n  position: relative;\n`;\n\nconst HexRow = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst HexCell = styled.div`\n  width: 100px;\n  height: 115px;\n  margin: 0 2px;\n  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\n  background-color: ${props => props.empty ? 'transparent' : '#8a2be2'};\n`;\n\nconst boardLayout = [\n  [0, 0, 0, 0, 1],\n  [0, 0, 0, 1, 0, 1],\n  [0, 0, 1, 0, 1, 0, 1],\n  [0, 0, 1, 0, 1, 0, 1],\n  [1, 0, 1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0, 1],\n  [0, 0, 1, 0, 1],\n  [0, 0, 0, 1],\n  [0, 0, 0, 1],\n];\n\nfunction Board({ currentTile, onPlaceTile }) {\n  const [tiles, setTiles] = useState(Array(19).fill(null));\n\n  const placeTile = (index) => {\n    if (tiles[index] === null && currentTile) {\n      const newTiles = [...tiles];\n      newTiles[index] = currentTile;\n      setTiles(newTiles);\n      onPlaceTile();\n    }\n  };\n\n  let tileIndex = 0;\n  return (\n    <BoardContainer>\n      {boardLayout.map((row, rowIndex) => (\n        <HexRow key={rowIndex} style={{ marginTop: rowIndex ? '-28px' : 0 }}>\n          {row.map((cell, colIndex) => (\n            <HexCell key={`${rowIndex}-${colIndex}`} empty={!cell}>\n              {cell ? (\n                <Tile \n                  values={tiles[tileIndex] || [0, 0, 0]} \n                  onClick={() => placeTile(tileIndex)}\n                  index={tileIndex}\n                />\n              ) : <div style={{ width: '100px', height: '115px' }} />}\n              {cell && tileIndex++}\n            </HexCell>\n          ))}\n        </HexRow>\n      ))}\n    </BoardContainer>\n  );\n}\n\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}