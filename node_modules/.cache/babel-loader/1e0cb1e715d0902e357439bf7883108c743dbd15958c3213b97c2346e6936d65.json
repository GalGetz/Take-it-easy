{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Board from './components/Board';\nimport TilePicker from './components/TilePicker';\nimport ScoreBoard from './components/ScoreDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background-color: #f0f0f0;\n  min-height: 100vh;\n`;\n_c = AppContainer;\nconst GameTitle = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n`;\n_c2 = GameTitle;\nconst possibleTiles = [[1, 2, 3], [1, 5, 9], [1, 6, 8], [2, 5, 7], [2, 6, 9], [3, 5, 8], [3, 6, 7], [4, 5, 6], [4, 7, 9], [5, 7, 8]];\nfunction App() {\n  _s();\n  const [currentTile, setCurrentTile] = useState(null);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    pickRandomTile();\n  }, []);\n  const pickRandomTile = () => {\n    const randomIndex = Math.floor(Math.random() * possibleTiles.length);\n    setCurrentTile(possibleTiles[randomIndex]);\n  };\n  const handlePlaceTile = () => {\n    // Here you would implement scoring logic\n    // For now, we'll just pick a new random tile\n    pickRandomTile();\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n      children: \"Take It Easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      currentTile: currentTile,\n      onPlaceTile: handlePlaceTile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TilePicker, {\n      currentTile: currentTile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4c5LNi0cRQrzlZ/wg1Z8/woWR9A=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"GameTitle\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","Board","TilePicker","ScoreBoard","jsxDEV","_jsxDEV","AppContainer","div","_c","GameTitle","h1","_c2","possibleTiles","App","_s","currentTile","setCurrentTile","score","setScore","pickRandomTile","randomIndex","Math","floor","random","length","handlePlaceTile","children","fileName","_jsxFileName","lineNumber","columnNumber","onPlaceTile","_c3","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Board from './components/Board';\nimport TilePicker from './components/TilePicker';\nimport ScoreBoard from './components/ScoreDisplay';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background-color: #f0f0f0;\n  min-height: 100vh;\n`;\n\nconst GameTitle = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n`;\n\nconst possibleTiles = [\n  [1, 2, 3], [1, 5, 9], [1, 6, 8], [2, 5, 7], [2, 6, 9],\n  [3, 5, 8], [3, 6, 7], [4, 5, 6], [4, 7, 9], [5, 7, 8]\n];\n\nfunction App() {\n  const [currentTile, setCurrentTile] = useState(null);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    pickRandomTile();\n  }, []);\n\n  const pickRandomTile = () => {\n    const randomIndex = Math.floor(Math.random() * possibleTiles.length);\n    setCurrentTile(possibleTiles[randomIndex]);\n  };\n\n  const handlePlaceTile = () => {\n    // Here you would implement scoring logic\n    // For now, we'll just pick a new random tile\n    pickRandomTile();\n  };\n\n  return (\n    <AppContainer>\n      <GameTitle>Take It Easy</GameTitle>\n      <Board currentTile={currentTile} onPlaceTile={handlePlaceTile} />\n      <TilePicker currentTile={currentTile} />\n      <ScoreBoard score={score} />\n    </AppContainer>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}