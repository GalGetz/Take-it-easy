{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n  width: 500px;\n  height: 500px;\n  margin-bottom: 70px;\n`;\n_c = BoardContainer;\nconst HexCell = styled.div`\n  width: 150%;\n  height: 150%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\n`;\n_c2 = HexCell;\nconst boardLayout = [[0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0]];\nfunction Board() {\n  _s();\n  const [tiles, setTiles] = useState(Array(19).fill(null));\n  const placeTile = (index, tile) => {\n    const newTiles = [...tiles];\n    newTiles[index] = tile;\n    setTiles(newTiles);\n  };\n  let tileIndex = 0;\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: boardLayout.flat().map((cell, index) => {\n      if (!cell) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(HexCell, {\n        children: [cell ? /*#__PURE__*/_jsxDEV(Tile, {\n          values: tiles[tileIndex] || [0, 0, 0],\n          onClick: () => placeTile(tileIndex, [1, 5, 9]) // Example values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : null, cell ? tileIndex++ : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"G3nbSkoqANilhO7LEo80zaLWJNE=\");\n_c3 = Board;\nexport default Board;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"HexCell\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","useState","styled","Tile","jsxDEV","_jsxDEV","BoardContainer","div","_c","HexCell","_c2","boardLayout","Board","_s","tiles","setTiles","Array","fill","placeTile","index","tile","newTiles","tileIndex","children","flat","map","cell","fileName","_jsxFileName","lineNumber","columnNumber","values","onClick","_c3","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\n\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n  width: 500px;\n  height: 500px;\n  margin-bottom: 70px;\n`;\n\nconst HexCell = styled.div`\n  width: 150%;\n  height: 150%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\n`;\n\nconst boardLayout = [\n  [0, 0, 1, 0, 0],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [0, 0, 1, 0, 0]\n];\n\nfunction Board() {\n  const [tiles, setTiles] = useState(Array(19).fill(null));\n\n  const placeTile = (index, tile) => {\n    const newTiles = [...tiles];\n    newTiles[index] = tile;\n    setTiles(newTiles);\n  };\n\n  let tileIndex = 0;\n  return (\n    <BoardContainer>\n      {boardLayout.flat().map((cell, index) => {\n        if (!cell){\n          return (<div key={index}>\n          </div>);\n        }\n        return (\n        <HexCell key={index} >\n          {cell ? (\n            <Tile \n              values={tiles[tileIndex] || [0, 0, 0]} \n              onClick={() => placeTile(tileIndex, [1, 5, 9])} // Example values\n            />\n          ) : null}\n          {cell ? tileIndex++ : null}\n        </HexCell>\n      );})}\n    </BoardContainer>\n  );\n}\n\nexport default Board;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,cAAc;AASpB,MAAMG,OAAO,GAAGP,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,OAAO;AASb,MAAME,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAChB;AAED,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACe,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAExD,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACjC,MAAMC,QAAQ,GAAG,CAAC,GAAGP,KAAK,CAAC;IAC3BO,QAAQ,CAACF,KAAK,CAAC,GAAGC,IAAI;IACtBL,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,IAAIC,SAAS,GAAG,CAAC;EACjB,oBACEjB,OAAA,CAACC,cAAc;IAAAiB,QAAA,EACZZ,WAAW,CAACa,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEP,KAAK,KAAK;MACvC,IAAI,CAACO,IAAI,EAAC;QACR,oBAAQrB,OAAA,YAAUc,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MACR;MACA,oBACAzB,OAAA,CAACI,OAAO;QAAAc,QAAA,GACLG,IAAI,gBACHrB,OAAA,CAACF,IAAI;UACH4B,MAAM,EAAEjB,KAAK,CAACQ,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UACtCU,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAACI,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,GACA,IAAI,EACPJ,IAAI,GAAGJ,SAAS,EAAE,GAAG,IAAI;MAAA,GAPdH,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CAAC;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAErB;AAACjB,EAAA,CA9BQD,KAAK;AAAAqB,GAAA,GAALrB,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAJ,EAAA,EAAAE,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}