{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js\";\n// src/components/Board.js\nimport React from 'react';\n// import styled from 'styled-components';\nimport Tile from './Tile';\nimport '../styles.css';\n\n// const BoardContainer = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(5, 80px);\n//   grid-template-rows: repeat(9, 40px);\n//   width: 420px;\n//   height: 400px;\n//   margin-bottom: 50px;\n//   align: center;\n// `;\n\n// const HexCell = styled.div`\n//   width: 130%;\n//   height: 190%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n// `;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardLayout = [[0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0]];\nfunction Board({\n  onChoose,\n  placedTiles\n}) {\n  let tileIndex = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoardContainer\",\n    children: boardLayout.flat().map((cell, index) => {\n      if (!cell) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this);\n      }\n      tileIndex++;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HexCell\",\n        children: /*#__PURE__*/_jsxDEV(Tile, {\n          index: tileIndex,\n          values: placedTiles[tileIndex - 1],\n          onClick: onChoose // Example values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Tile","jsxDEV","_jsxDEV","boardLayout","Board","onChoose","placedTiles","tileIndex","className","children","flat","map","cell","index","fileName","_jsxFileName","lineNumber","columnNumber","values","onClick","_c","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\nimport React from 'react';\n// import styled from 'styled-components';\nimport Tile from './Tile';\nimport '../styles.css';\n\n\n// const BoardContainer = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(5, 80px);\n//   grid-template-rows: repeat(9, 40px);\n//   width: 420px;\n//   height: 400px;\n//   margin-bottom: 50px;\n//   align: center;\n// `;\n\n// const HexCell = styled.div`\n//   width: 130%;\n//   height: 190%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n// `;\n\nconst boardLayout = [\n  [0, 0, 1, 0, 0],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [0, 0, 1, 0, 0]\n];\n\nfunction Board({onChoose, placedTiles}) {\n\n  let tileIndex = 0;\n  return (\n    <div className=\"BoardContainer\">\n      {boardLayout.flat().map((cell, index) => {\n        if (!cell){\n          return (<div key={index}>\n          </div>);\n        }\n        tileIndex++;\n        return (\n        <div className=\"HexCell\" key={index} >\n            <Tile \n              index={tileIndex}\n              values={placedTiles[tileIndex - 1]} \n              onClick={onChoose} // Example values\n            />\n        </div>\n      );})}\n    </div>\n  );\n}\n\nexport default Board;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,eAAe;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAChB;AAED,SAASC,KAAKA,CAAC;EAACC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAEtC,IAAIC,SAAS,GAAG,CAAC;EACjB,oBACEL,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BN,WAAW,CAACO,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACvC,IAAI,CAACD,IAAI,EAAC;QACR,oBAAQV,OAAA,YAAUW,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MACR;MACAV,SAAS,EAAE;MACX,oBACAL,OAAA;QAAKM,SAAS,EAAC,SAAS;QAAAC,QAAA,eACpBP,OAAA,CAACF,IAAI;UACHa,KAAK,EAAEN,SAAU;UACjBW,MAAM,EAAEZ,WAAW,CAACC,SAAS,GAAG,CAAC,CAAE;UACnCY,OAAO,EAAEd,QAAS,CAAC;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC,GALwBJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAM9B,CAAC;IACN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACG,EAAA,GAtBQhB,KAAK;AAwBd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}