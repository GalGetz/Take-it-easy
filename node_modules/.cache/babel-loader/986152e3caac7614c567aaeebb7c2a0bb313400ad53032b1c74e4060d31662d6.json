{"ast":null,"code":"var _jsxFileName = \"/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n  width: 600px;\n  height: 600px;\n  margin-bottom: 50px;\n  align: center;\n`;\n_c = BoardContainer;\nconst HexCell = styled.div`\n  width: 142%;\n  height: 180%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = HexCell;\nconst boardLayout = [[0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0]];\nconst tiles = [];\nconst iValues = [1, 5, 9];\nconst jValues = [2, 6, 7];\nconst kValues = [3, 4, 8];\nfor (const i of iValues) {\n  for (const j of jValues) {\n    for (const k of kValues) {\n      tiles.push([i, j, k]);\n    }\n  }\n}\nfunction Board() {\n  _s();\n  const [placedTiles, setPlacedTiles] = useState([]);\n  const placeTile = (index, tile) => {\n    const newTiles = [...placedTiles];\n    newTiles[index] = tile;\n    setPlacedTiles(newTiles);\n  };\n  let tileIndex = 0;\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: boardLayout.flat().map((cell, index) => {\n      if (!cell) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(HexCell, {\n        children: [cell ? /*#__PURE__*/_jsxDEV(Tile, {\n          values: tiles[tileIndex] || [0, 0, 0],\n          onClick: () => placeTile(tileIndex, [5, 5, 5]) // Example values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : null, cell ? tileIndex++ : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"K6aZptToAQVMLLYKAWn7WlUGm7w=\");\n_c3 = Board;\nexport default Board;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"HexCell\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","useState","styled","Tile","jsxDEV","_jsxDEV","BoardContainer","div","_c","HexCell","_c2","boardLayout","tiles","iValues","jValues","kValues","i","j","k","push","Board","_s","placedTiles","setPlacedTiles","placeTile","index","tile","newTiles","tileIndex","children","flat","map","cell","fileName","_jsxFileName","lineNumber","columnNumber","values","onClick","_c3","$RefreshReg$"],"sources":["/Users/galgetz/HUJI/AI_Project/take-it-easy-game/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Tile from './Tile';\n\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n  width: 600px;\n  height: 600px;\n  margin-bottom: 50px;\n  align: center;\n`;\n\nconst HexCell = styled.div`\n  width: 142%;\n  height: 180%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst boardLayout = [\n  [0, 0, 1, 0, 0],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 0],\n  [0, 0, 1, 0, 0]\n];\n\nconst tiles = [];\nconst iValues = [1, 5, 9];\nconst jValues = [2, 6, 7];\nconst kValues = [3, 4, 8];\n\nfor (const i of iValues) {\n  for (const j of jValues) {\n    for (const k of kValues) {\n      tiles.push([i, j, k]);\n    }\n  }\n}\nfunction Board() {\n  const [placedTiles, setPlacedTiles] = useState([])\n\n  const placeTile = (index, tile) => {\n    const newTiles = [...placedTiles];\n    newTiles[index] = tile;\n    setPlacedTiles(newTiles);\n  };\n\n  let tileIndex = 0;\n  return (\n    <BoardContainer>\n      {boardLayout.flat().map((cell, index) => {\n        if (!cell){\n          return (<div key={index}>\n          </div>);\n        }\n        return (\n        <HexCell key={index} >\n          {cell ? (\n            <Tile \n              values={tiles[tileIndex] || [0, 0, 0]} \n              onClick={() => placeTile(tileIndex, [5, 5, 5])} // Example values\n            />\n          ) : null}\n          {cell ? tileIndex++ : null}\n        </HexCell>\n      );})}\n    </BoardContainer>\n  );\n}\n\nexport default Board;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,cAAc;AAUpB,MAAMG,OAAO,GAAGP,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,OAAO;AAQb,MAAME,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAChB;AAED,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzB,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzB,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAEzB,KAAK,MAAMC,CAAC,IAAIH,OAAO,EAAE;EACvB,KAAK,MAAMI,CAAC,IAAIH,OAAO,EAAE;IACvB,KAAK,MAAMI,CAAC,IAAIH,OAAO,EAAE;MACvBH,KAAK,CAACO,IAAI,CAAC,CAACH,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,CAAC;IACvB;EACF;AACF;AACA,SAASE,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMuB,SAAS,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACjC,MAAMC,QAAQ,GAAG,CAAC,GAAGL,WAAW,CAAC;IACjCK,QAAQ,CAACF,KAAK,CAAC,GAAGC,IAAI;IACtBH,cAAc,CAACI,QAAQ,CAAC;EAC1B,CAAC;EAED,IAAIC,SAAS,GAAG,CAAC;EACjB,oBACEvB,OAAA,CAACC,cAAc;IAAAuB,QAAA,EACZlB,WAAW,CAACmB,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEP,KAAK,KAAK;MACvC,IAAI,CAACO,IAAI,EAAC;QACR,oBAAQ3B,OAAA,YAAUoB,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MACR;MACA,oBACA/B,OAAA,CAACI,OAAO;QAAAoB,QAAA,GACLG,IAAI,gBACH3B,OAAA,CAACF,IAAI;UACHkC,MAAM,EAAEzB,KAAK,CAACgB,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UACtCU,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAACI,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,GACA,IAAI,EACPJ,IAAI,GAAGJ,SAAS,EAAE,GAAG,IAAI;MAAA,GAPdH,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CAAC;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAErB;AAACf,EAAA,CA9BQD,KAAK;AAAAmB,GAAA,GAALnB,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAZ,EAAA,EAAAE,GAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}